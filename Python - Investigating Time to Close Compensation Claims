# importing the data

import pandas as pd
food = pd.read_csv("food_claims_2212.csv", index_col="claim_id")
food.head()


# To get an overview of the values I also returned the following summaries:

food.head()
food.info()
food.describe()


# CLEANING THE DATA
# First, I removed the first 3 characters:

food["claim_amount"] = food["claim_amount"].str[3:]
food["claim_amount"].head()

# Then I changed the column type:

food["claim_amount"] = pd.to_numeric(food["claim_amount"])
food.info()

# Finally I rounded the values to 2 decimal places:

food["claim_amount"].round(decimals = 2)
food["amount_paid"].round(decimals = 2)

food.head()


# Check the "location" column has only the 4 locations listed

food["location"].value_counts()


# Check the "cause" column has only the 3 choices (meat, vegetables, unknown) listed

food["cause"].value_counts()


# What I did to correct the formatting errors in "cause":

food["cause"] = food["cause"].str.lower()
food["cause"] = food["cause"].str.replace("vegetables", "vegetable")
food["cause"] = food["cause"].str.strip()
food["cause"].value_counts()

# Find the number of missing values in the columns:

food.isna().sum()

# What I did to correct these null values:

food['amount_paid'] = food['amount_paid'].fillna(food['amount_paid'].median())
food['linked_cases'] = food['linked_cases'].fillna('False')
food.info()
food.isna().sum()

# VISUALISING THE DATA
# Create a visualization that shows the number of claims in each location

import matplotlib.pyplot as plt
import seaborn as sns

sns.set_theme(style="whitegrid")

sns.histplot(data=food, x="location", hue="location", alpha=.8)

plt.title("Number of Claims By Location")
plt.ylabel("Number of claims")
plt.xlabel("")
plt.legend("")
plt.show()


# Create a visualization that shows if the "claim amount" is consistent across the 4 locations:

sns.catplot(x='location', 
            y='claim_amount',
            data=food,
            kind='box',
            sym='')

plt.title("Claim Amount By Location")
plt.ylabel("Amount of Claim")
plt.xlabel("")
plt.show()


# Create a visualization that shows the distribution of time to close for all claims:

sns.histplot(data=food, x="time_to_close", bins=40)
plt.title("")
plt.ylabel("Number of claims")
plt.xlabel("Time to close (days)")
plt.xlim(0, 400)
plt.legend("")
plt.show()





